===========kapao=============
cd GPUoffloadtest/kapao
conda activate kapao
如果缺少模型，先下载模型： python data/scripts/download_models.py
python GPUoffload_test/inference.py --bbox -times 1000
注：会循环处理GPUoffloadtest/kapao/GPUoffload_test/input内所有图片，输出到GPUoffloadtest/kapao/GPUoffload_test/output。--bbox可设为--pose/face/kpbbox
-times 1000换成要测试的图片数量。
注意！：先管我要data放到GPUoffloadtest/kapao/data，再运行

===========calvin=============
-----准备模型-----
生成场景：
python core/domains/gridworld/dataset.py --map maze -sz 15 15 -vr 2 -trajlen 15 -mxs 500 -n 4000 --clear
训练模型：
python core/domains/gridworld/trainer.py --data data/gridworld/MazeMap_15x15_vr_2_4000_15_500 --model CALVINConv2d --k 60 --discount 0.25
------使用模型-------
cd GPUoffloadtest/calvin
conda activate calvin
python GPUoffload_test/inference.py data/gridworld/MazeMap_15x15_vr_2_4000_15_500/models/CALVINConv2d_k_60_i_3_h_150_adam_0.005_0.1_0.25_0207_205400_936487/epoch_004/checkpoint.pt -times 100
注： -times 1000换成要测试的步数，如果多于1000重新循环。
扩大了模型(x6)的新版： python GPUoffload_test/inference.py data/gridworld/MazeMap_15x15_vr_2_4000_15_500/models/CALVINConv2d_k_60_i_3_h_150_adam_0.005_0.1_0.25_0212_225551_961179/epoch_001/checkpoint.pt -times 100

===========nice_slam=============
cd GPUoffloadtest/nice-slam
conda activate nice-slam
python -W ignore GPUoffload_test/inference.py configs/Demo/demo.yaml --times 10

===========stylemesh=============
cd GPUoffloadtest/stylemesh
bash GPUoffload_test/run.sh